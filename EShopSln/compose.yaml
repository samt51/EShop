# EShopSln/compose.yaml
name: eshop

# Tekrarlanan RabbitMQ env'lerini tek yerde toplayalım
x-mt-rabbit: &mt_rabbit
  RABBITMQ_HOST: rabbitmq
  RABBITMQ_USERNAME: guest
  RABBITMQ_PASSWORD: guest
  RabbitMQ__Host: rabbitmq
  RabbitMQ__Username: guest
  RabbitMQ__Password: guest

networks:
  eshop-net:

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    # container_name: eshop-rabbitmq   # ÇAKIŞMA YARATTIĞI İÇİN KALDIRILDI
    hostname: rabbitmq
    ports:
      - "15672:15672"   # Management UI (guest/guest)
      - "5672:5672"     # AMQP (host'tan erişmek istersen)
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    networks: [eshop-net]

  order.api:
    image: ${DOCKER_NS:-samt51}/order:${VERSION:-latest}
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *mt_rabbit
      ASPNETCORE_URLS: http://+:8080
    # Host'tan çağırmak istersen aç:
    # ports: ["8082:8080"]
    restart: unless-stopped
    networks: [eshop-net]

  payment.api:
    image: ${DOCKER_NS:-samt51}/payment:${VERSION:-latest}
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *mt_rabbit
      ASPNETCORE_URLS: http://+:8080
    # ports: ["8083:8080"]
    restart: unless-stopped
    networks: [eshop-net]

  basket.api:
    image: ${DOCKER_NS:-samt51}/basket:${VERSION:-latest}
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *mt_rabbit
      ASPNETCORE_URLS: http://+:8080
    # ports: ["8084:8080"]
    restart: unless-stopped
    networks: [eshop-net]

  catalog.apii:
    image: ${DOCKER_NS:-samt51}/catalog:${VERSION:-latest}
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      <<: *mt_rabbit
      ASPNETCORE_URLS: http://+:8080
    # ports: ["8085:8080"]
    restart: unless-stopped
    networks: [eshop-net]
